-- MySQL Script generated by MySQL Workbench
-- Sat Jul  8 14:50:27 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema chatapp_database
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema chatapp_database
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `chatapp_database` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci ;
USE `chatapp_database` ;

-- -----------------------------------------------------
-- Table `chatapp_database`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `chatapp_database`.`users` (
  `key` VARCHAR(100) NOT NULL,
  `email` VARCHAR(200) NULL,
  `password` VARCHAR(45) NULL,
  `nickname` VARCHAR(200) NULL,
  `created_at` VARCHAR(200) NULL,
  `avatar` VARCHAR(200) NULL,
  `cover` VARCHAR(200) NULL,
  `sex` VARCHAR(45) NULL,
  `birthday` VARCHAR(85) NULL,
  `calling_code` VARCHAR(45) NULL,
  `phone_number` INT NULL,
  `carrier` VARCHAR(200) NULL,
  `bundle_id` VARCHAR(200) NULL,
  `country_code` VARCHAR(45) NULL,
  `last_active` VARCHAR(200) NULL,
  `device_token` VARCHAR(200) NULL,
  `device_name` VARCHAR(200) NULL,
  `device_type` VARCHAR(200) NULL,
  `latitude` DOUBLE NULL,
  `longitude` DOUBLE NULL,
  `wifi_name` VARCHAR(100) NULL,
  `is_verify` INT NULL DEFAULT 0,
  `status` VARCHAR(45) NULL,
  `city` VARCHAR(200) NULL,
  `country` VARCHAR(200) NULL,
  `isp` VARCHAR(200) NULL,
  `ip_address` VARCHAR(200) NULL,
  `socket_id` VARCHAR(200) NULL,
  `access_token` TEXT NULL,
  PRIMARY KEY (`key`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `chatapp_database`.`contacts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `chatapp_database`.`contacts` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `friend_key` VARCHAR(200) NULL,
  `relationship` INT NULL,
  `created_time` VARCHAR(45) NULL,
  `users_key` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_contacts_users1_idx` (`users_key` ASC),
  CONSTRAINT `fk_contacts_users1`
    FOREIGN KEY (`users_key`)
    REFERENCES `chatapp_database`.`users` (`key`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `chatapp_database`.`requests`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `chatapp_database`.`requests` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `friend_key` VARCHAR(200) NULL,
  `users_key` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_requests_users1_idx` (`users_key` ASC),
  CONSTRAINT `fk_requests_users1`
    FOREIGN KEY (`users_key`)
    REFERENCES `chatapp_database`.`users` (`key`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `chatapp_database`.`conversations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `chatapp_database`.`conversations` (
  `key` VARCHAR(100) NOT NULL,
  `name` VARCHAR(200) NULL,
  `avatar` VARCHAR(200) NULL,
  `is_group` INT NULL,
  `created_time` DOUBLE NULL,
  `created_by` VARCHAR(45) NULL,
  `last_action_time` DOUBLE NULL,
  `last_key_update` VARCHAR(200) NULL,
  `last_name_update` VARCHAR(200) NULL,
  `last_message` TEXT NULL,
  `receiver_name` VARCHAR(200) NULL,
  `receiver_avatar` VARCHAR(200) NULL,
  `sender_name` VARCHAR(200) NULL,
  `sender_avatar` VARCHAR(200) NULL,
  `users_key` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`key`),
  INDEX `fk_conversations_users1_idx` (`users_key` ASC),
  CONSTRAINT `fk_conversations_users1`
    FOREIGN KEY (`users_key`)
    REFERENCES `chatapp_database`.`users` (`key`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `chatapp_database`.`messages`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `chatapp_database`.`messages` (
  `key` VARCHAR(100) NOT NULL,
  `sender_id` VARCHAR(200) NULL,
  `content` TEXT NULL,
  `time` DOUBLE NULL,
  `type` VARCHAR(100) NULL,
  `conversations_key` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`key`),
  INDEX `fk_messages_conversations1_idx` (`conversations_key` ASC),
  CONSTRAINT `fk_messages_conversations1`
    FOREIGN KEY (`conversations_key`)
    REFERENCES `chatapp_database`.`conversations` (`key`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `chatapp_database`.`members`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `chatapp_database`.`members` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_key` VARCHAR(200) NULL,
  `on_notification` INT NULL,
  `conversations_key` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_members_conversations1_idx` (`conversations_key` ASC),
  CONSTRAINT `fk_members_conversations1`
    FOREIGN KEY (`conversations_key`)
    REFERENCES `chatapp_database`.`conversations` (`key`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `chatapp_database`.`message_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `chatapp_database`.`message_status` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `is_read` INT NULL,
  `conversations_key` VARCHAR(100) NOT NULL,
  `messages_key` VARCHAR(100) NOT NULL,
  `users_key` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_message_status_conversations1_idx` (`conversations_key` ASC),
  INDEX `fk_message_status_messages1_idx` (`messages_key` ASC),
  INDEX `fk_message_status_users1_idx` (`users_key` ASC),
  CONSTRAINT `fk_message_status_conversations1`
    FOREIGN KEY (`conversations_key`)
    REFERENCES `chatapp_database`.`conversations` (`key`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_message_status_messages1`
    FOREIGN KEY (`messages_key`)
    REFERENCES `chatapp_database`.`messages` (`key`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_message_status_users1`
    FOREIGN KEY (`users_key`)
    REFERENCES `chatapp_database`.`users` (`key`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `chatapp_database`.`posts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `chatapp_database`.`posts` (
  `key` VARCHAR(100) NOT NULL,
  `caption` TEXT NULL,
  `posted_time` DOUBLE NULL,
  `edited_time` DOUBLE NULL,
  `source` TEXT NULL,
  `permission` INT NULL,
  `type` VARCHAR(45) NULL,
  `users_key` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`key`),
  INDEX `fk_posts_users1_idx` (`users_key` ASC),
  CONSTRAINT `fk_posts_users1`
    FOREIGN KEY (`users_key`)
    REFERENCES `chatapp_database`.`users` (`key`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `chatapp_database`.`comments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `chatapp_database`.`comments` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `friend_key` VARCHAR(45) NULL,
  `content` TEXT NULL,
  `type` VARCHAR(45) NULL,
  `posts_key` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_comments_posts1_idx` (`posts_key` ASC),
  CONSTRAINT `fk_comments_posts1`
    FOREIGN KEY (`posts_key`)
    REFERENCES `chatapp_database`.`posts` (`key`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `chatapp_database`.`likes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `chatapp_database`.`likes` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(45) NULL,
  `posts_key` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_likes_posts1_idx` (`posts_key` ASC),
  CONSTRAINT `fk_likes_posts1`
    FOREIGN KEY (`posts_key`)
    REFERENCES `chatapp_database`.`posts` (`key`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `chatapp_database`.`blocks`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `chatapp_database`.`blocks` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `friend_key` VARCHAR(45) NULL,
  `users_key` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_blocks_users1_idx` (`users_key` ASC),
  CONSTRAINT `fk_blocks_users1`
    FOREIGN KEY (`users_key`)
    REFERENCES `chatapp_database`.`users` (`key`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `chatapp_database`.`devices`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `chatapp_database`.`devices` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `device_token` VARCHAR(45) NULL,
  `access_token` VARCHAR(45) NULL,
  `users_key` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_devices_users1_idx` (`users_key` ASC),
  CONSTRAINT `fk_devices_users1`
    FOREIGN KEY (`users_key`)
    REFERENCES `chatapp_database`.`users` (`key`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `chatapp_database`.`notification_count`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `chatapp_database`.`notification_count` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `requests` INT NULL DEFAULT 0,
  `accepts` INT NULL DEFAULT 0,
  `conversations` INT NULL DEFAULT 0,
  `users_key` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_notification_count_users1_idx` (`users_key` ASC),
  CONSTRAINT `fk_notification_count_users1`
    FOREIGN KEY (`users_key`)
    REFERENCES `chatapp_database`.`users` (`key`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
